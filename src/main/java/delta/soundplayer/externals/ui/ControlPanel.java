package delta.soundplayer.externals.ui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;

import javax.swing.JFileChooser;
import javax.swing.JSlider;
import javax.swing.Timer;

import delta.soundplayer.externals.codecs.AudioFileIdentifier;
import delta.soundplayer.externals.codecs.Identifiers;
import delta.soundplayer.externals.data.Track;
import delta.soundplayer.externals.player.AudioOutput;
import delta.soundplayer.externals.player.AudioPlayer;
import delta.soundplayer.externals.player.PlayerEvent;
import delta.soundplayer.externals.player.PlayerListener;

/**
 * Control panel for the audio player.
 * @author DAM
 */
public class ControlPanel extends javax.swing.JPanel
{
  private Application app=Application.getInstance();
  private AudioPlayer player=app.getPlayer();
  private final AudioOutput output=player.getAudioOutput();
  private JFileChooser chooser;

  private VolumeController volume;
  private ProgressController progress;

  /**
   * Creates new form ControlBar
   */
  public ControlPanel()
  {
    volume=new VolumeController(output);
    progress=new ProgressController(player);
    initComponents();
    initButtonListeners();
    initPlayerListeners();
    updateUI();
  }

  private void initPlayerListeners()
  {
    final Timer timer=new Timer(1000,new ActionListener()
    {
      public void actionPerformed(ActionEvent e)
      {
        progress.handleTick();
        if (player.isPlaying())
        {
          updateStatus();
        }
      }
    });
    timer.start();

    player.addListener(new PlayerListener()
    {
      public void onEvent(PlayerEvent e)
      {
        pauseButton.setSelected(player.isPaused());
        switch (e.getEventCode())
        {
          case PLAYING_STARTED:
            timer.start();
          break;
          case PAUSED:
            timer.stop();
          break;
          case STOPPED:
            timer.stop();
            progress.handleStop();
            statusLabel.setText(null);
          break;
          case FILE_OPENED:
            Track track=player.getTrack();
            progress.handleNewTrack(track);
            updateStatus();
          break;
          case SEEK_FINISHED:
            progress.handleSeekFinished();
          break;
        }
      }
    });
  }

  private void updateStatus()
  {
    String text=UiUtils.playingTime(player,player.getTrack());
    statusLabel.setText(text);
  }

  private void choose()
  {
    chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
    chooser.setCurrentDirectory(new File("D:\\dev\\git\\lotro-tools"));
    int ok=chooser.showDialog(null,"Choose");
    File file=null;
    if (ok==JFileChooser.APPROVE_OPTION)
    {
      file=chooser.getSelectedFile();
    }
    if (file==null)
    {
      return;
    }
    Track track=null;
    AudioFileIdentifier identifier=Identifiers.getIdentifier(file.getName());
    if (identifier!=null)
    {
      track=identifier.identify(file);
      player.open(track);
    }
  }

  private void initButtonListeners()
  {
    chooseButton.addActionListener(new ActionListener()
    {
      public void actionPerformed(ActionEvent e)
      {
        choose();
      }
    });
    playButton.addActionListener(new ActionListener()
    {
      public void actionPerformed(ActionEvent e)
      {
        player.play();
      }
    });
    stopButton.addActionListener(new ActionListener()
    {
      @Override
      public void actionPerformed(ActionEvent e)
      {
        player.stop();
      }
    });
    pauseButton.addActionListener(new ActionListener()
    {
      public void actionPerformed(ActionEvent e)
      {
        player.pause();
      }
    });
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated
  // Code">//GEN-BEGIN:initComponents
  private void initComponents()
  {

    javax.swing.JToolBar jToolBar1=new javax.swing.JToolBar();
    stopButton=new javax.swing.JButton();
    playButton=new javax.swing.JButton();
    chooseButton=new javax.swing.JButton();
    pauseButton=new javax.swing.JToggleButton();
    statusLabel=new javax.swing.JLabel();

    setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createMatteBorder(0,0,1,0,java.awt.Color.gray),
        javax.swing.BorderFactory.createEmptyBorder(0,5,0,5)));
    setFocusable(false);
    setPreferredSize(new java.awt.Dimension(669,32));

    jToolBar1.setFloatable(false);
    jToolBar1.setForeground(javax.swing.UIManager.getDefaults().getColor("Panel.background"));
    jToolBar1.setRollover(true);
    jToolBar1.setBorderPainted(false);
    jToolBar1.setFocusable(false);

    // playButton.setIcon(new
    // javax.swing.ImageIcon(getClass().getResource("play.png"))); // NOI18N
    chooseButton.setFocusable(false);
    chooseButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    chooseButton.setMargin(new java.awt.Insets(2,3,2,3));
    chooseButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jToolBar1.add(chooseButton);
    chooser=new JFileChooser();

    stopButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("stop.png"))); // NOI18N
    stopButton.setFocusable(false);
    stopButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    stopButton.setMargin(new java.awt.Insets(2,3,2,3));
    stopButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jToolBar1.add(stopButton);

    playButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("play.png"))); // NOI18N
    playButton.setFocusable(false);
    playButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    playButton.setMargin(new java.awt.Insets(2,3,2,3));
    playButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jToolBar1.add(playButton);

    pauseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("pause.png"))); // NOI18N
    pauseButton.setFocusable(false);
    pauseButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    pauseButton.setMargin(new java.awt.Insets(2,3,2,3));
    pauseButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    jToolBar1.add(pauseButton);

    statusLabel.setFont(statusLabel.getFont().deriveFont(statusLabel.getFont().getStyle()|java.awt.Font.BOLD));

    javax.swing.GroupLayout layout=new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    JSlider volumeSlider=volume.getSlider();
    JSlider progressSlider=progress.getSlider();
    layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup()
        .addComponent(jToolBar1,javax.swing.GroupLayout.PREFERRED_SIZE,javax.swing.GroupLayout.DEFAULT_SIZE,javax.swing.GroupLayout.PREFERRED_SIZE)
        .addGap(4,4,4).addComponent(volumeSlider,javax.swing.GroupLayout.PREFERRED_SIZE,119,javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(progressSlider,javax.swing.GroupLayout.DEFAULT_SIZE,233,Short.MAX_VALUE).addGap(9,9,9).addComponent(statusLabel)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)));
    layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(volumeSlider,javax.swing.GroupLayout.PREFERRED_SIZE,31,javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(progressSlider,javax.swing.GroupLayout.PREFERRED_SIZE,31,javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(statusLabel,javax.swing.GroupLayout.PREFERRED_SIZE,31,javax.swing.GroupLayout.PREFERRED_SIZE)
        .addComponent(jToolBar1,javax.swing.GroupLayout.PREFERRED_SIZE,31,javax.swing.GroupLayout.PREFERRED_SIZE));
  }// </editor-fold>//GEN-END:initComponents

  javax.swing.JToggleButton pauseButton;
  javax.swing.JButton playButton;
  javax.swing.JButton chooseButton;
  javax.swing.JLabel statusLabel;
  javax.swing.JButton stopButton;
}
